name: Localize CI

on:
  push:
    branches:
      - main
      - master
      - 'stable/**'

  pull_request:

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8']
        django: ['2.2', '3.0', '3.1']
        wagtail: ['2.11']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Test
        run: |
          tox
        env:
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-sqlite

  test-postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8']
        django: ['2.2', '3.0', '3.1']
        wagtail: ['2.11', '2.12']
        postgres: ['10.8']

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install tox
      - name: Test
        run: |
          tox
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/wagtail_localize
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-postgres

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.8']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install -e.[testing]
          pip install coverage==5.4
      - name: Test
        run: |
          coverage run testmanage.py test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  new-strings:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.8']
        node: ['14']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Install gettext
        run: sudo apt-get install gettext
      - name: Install podiff
        run: |
          wget ftp://download.gnu.org.ua/pub/release/podiff/podiff-1.3.tar.gz
          tar -xf podiff-1.3.tar.gz
          cd podiff-1.3
          make
      - name: Install dependencies
        run: |
          pip install -e.[testing]
          npm install
      - name: Check for new messages
        run: |
          msgcat wagtail_localize/locale/en/LC_MESSAGES/*.po | sed "/^\"POT-Creation-Date\:/d" > current.po
          make messages
          msgcat wagtail_localize/locale/en/LC_MESSAGES/*.po | sed "/^\"POT-Creation-Date\:/d" > next.po
          ./podiff-1.3/podiff current.po next.po
